name: Create VibeStack Release Packages

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for manual release'
        required: true
        default: 'v1.0.0'
  push:
    branches: [main]
    paths: ['.github/workflows/release-packages.yml']

jobs:
  package-vibestack:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set release tag
      id: release_tag
      run: |
        if [ "${{ github.event_name }}" = "release" ]; then
          echo "tag_name=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
        else
          echo "tag_name=${{ github.event.inputs.tag_name }}" >> $GITHUB_OUTPUT
        fi

    - name: Create VibeStack Complete package
      run: |
        echo "ðŸ“¦ Creating VibeStack Complete package..."
        # Create directory for VibeStack Complete (both servers)
        mkdir -p vibestack-package
        cp terraform/*.tf vibestack-package/
        cp terraform/vibestack/schema.yaml vibestack-package/

        # Create the zip file with simple name for clean Resource Manager stack name
        cd vibestack-package
        zip -r ../vibestack.zip .
        cd ..

        echo "âœ… Created vibestack.zip (will create 'vibestack' stack in Resource Manager)"
        ls -la vibestack.zip

    - name: Create Coolify Only package
      run: |
        echo "ðŸ“¦ Creating Coolify Only package..."
        # Create directory for Coolify Only
        mkdir -p coolify-package
        cp terraform/*.tf coolify-package/
        cp terraform/coolify-only/schema.yaml coolify-package/

        # Create the zip file with simple name for clean Resource Manager stack name
        cd coolify-package
        zip -r ../coolify.zip .
        cd ..

        echo "âœ… Created coolify.zip (will create 'coolify' stack in Resource Manager)"
        ls -la coolify.zip

    - name: Create KASM Only package
      run: |
        echo "ðŸ“¦ Creating KASM Only package..."
        # Create directory for KASM Only
        mkdir -p kasm-package
        cp terraform/*.tf kasm-package/
        cp terraform/kasm-only/schema.yaml kasm-package/

        # Create the zip file with simple name for clean Resource Manager stack name
        cd kasm-package
        zip -r ../kasm.zip .
        cd ..

        echo "âœ… Created kasm.zip (will create 'kasm' stack in Resource Manager)"
        ls -la kasm.zip

    - name: Show created packages
      run: |
        echo "ðŸ“¦ Created packages:"
        ls -la *.zip

        echo -e "\nðŸ“‹ VibeStack Complete contents:"
        unzip -l vibestack.zip

        echo -e "\nðŸ“‹ Coolify Only contents:"
        unzip -l coolify.zip

        echo -e "\nðŸ“‹ KASM Only contents:"
        unzip -l kasm.zip

    - name: Upload packages to release (if triggered by release)
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.event.release.tag_name }}
        files: |
          vibestack-full.zip
          vibestack-coolify.zip
          vibestack-kasm.zip

    - name: Create manual release (if triggered manually)
      if: github.event_name == 'workflow_dispatch'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.release_tag.outputs.tag_name }}
        name: VibeStack Release ${{ steps.release_tag.outputs.tag_name }}
        body: |
          VibeStack deployment packages for Oracle Cloud Always Free tier.

          ## ðŸš€ Quick Deploy Options

          | Package | Description | Deploy |
          |---------|-------------|--------|
          | **VibeStack Complete** | Both KASM + Coolify servers (4 OCPUs, 24GB RAM) | [![Deploy to Oracle Cloud](https://oci-resourcemanager-plugin.plugins.oci.oraclecloud.com/latest/deploy-to-oracle-cloud.svg)](https://cloud.oracle.com/resourcemanager/stacks/create?zipUrl=https://github.com/${{ github.repository }}/releases/latest/download/vibestack.zip) |
          | **Coolify Only** | Self-hosted app platform (2 OCPUs, 12GB RAM) | [![Deploy to Oracle Cloud](https://oci-resourcemanager-plugin.plugins.oci.oraclecloud.com/latest/deploy-to-oracle-cloud.svg)](https://cloud.oracle.com/resourcemanager/stacks/create?zipUrl=https://github.com/${{ github.repository }}/releases/latest/download/coolify.zip) |
          | **KASM Only** | Remote workspace server (2 OCPUs, 12GB RAM) | [![Deploy to Oracle Cloud](https://oci-resourcemanager-plugin.plugins.oci.oraclecloud.com/latest/deploy-to-oracle-cloud.svg)](https://cloud.oracle.com/resourcemanager/stacks/create?zipUrl=https://github.com/${{ github.repository }}/releases/latest/download/kasm.zip) |

          ## ðŸ“‹ What Gets Created

          ### VibeStack Complete (Both Servers)
          - **KASM Server**: VM.Standard.A1.Flex (2 OCPUs, 12GB RAM, 60GB storage)
          - **Coolify Server**: VM.Standard.A1.Flex (2 OCPUs, 12GB RAM, 100GB storage)
          - **Total**: 4 OCPUs, 24GB RAM, 160GB storage (80% of Always Free allocation)

          ### Coolify Only
          - **Coolify Server**: VM.Standard.A1.Flex (2 OCPUs, 12GB RAM, 100GB storage)
          - **Self-hosted platform** for deploying applications like Vercel/Netlify

          ### KASM Only
          - **KASM Server**: VM.Standard.A1.Flex (2 OCPUs, 12GB RAM, 60GB storage)
          - **Remote workspaces** with full desktop environments in the browser

          ## ðŸ”§ All Packages Include
          - **Custom compartment** (you name it during deployment)
          - **Ubuntu 22.04 LTS** (or Oracle Linux option)
          - **Public networking** with security groups
          - **SSH access** with your public key
          - **Always Free tier compatible** - no charges

          ## Requirements
          - OCI Always Free tier account
          - SSH public key for server access
          - Target region with A1 compute capacity
        files: |
          vibestack-full.zip
          vibestack-coolify.zip
          vibestack-kasm.zip
        draft: false
        prerelease: false

    - name: Verify package contents
      run: |
        echo "ðŸ“¦ Package Verification:"

        REQUIRED_FILES=(
          "providers.tf"
          "variables.tf"
          "outputs.tf"
          "schema.yaml"
          "compute.tf"
          "network.tf"
          "storage.tf"
          "locals.tf"
          "compartment.tf"
          "datasources.tf"
        )

        for package in "vibestack.zip" "coolify.zip" "kasm.zip"; do
          echo -e "\nâœ… Checking $package:"
          for file in "${REQUIRED_FILES[@]}"; do
            if unzip -l "$package" | grep -q "$file"; then
              echo "  âœ“ $file"
            else
              echo "  âœ— $file (MISSING)"
            fi
          done
        done